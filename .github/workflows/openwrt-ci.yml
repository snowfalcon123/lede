# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: OpenWrt-CI

on:
  schedule:
    - cron: 0 20 * * *
  release:
    types: [published]

jobs:

  build_openwrt:

    name: Build OpenWrt firmware

    runs-on: ubuntu-latest

    if: github.event.repository.owner.id == github.event.sender.id

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

          df -h

      - name: Update feeds
        run: |
          echo 'src-git helloworld https://github.com/fw876/helloworld' >> ./feeds.conf.default
          sed -i 's/#src-git helloworld/src-git helloworld/g' ./feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate configuration file
        run: |
          rm -f ./.config*
          touch ./.config
          cat >> .config <<EOF
          #
          # ========================固件定制部分========================
          #
          # 示例配置，下面是 diff.config 文件中的内容
          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_x86_64_DEVICE_generic=y
          CONFIG_ATH10K_LEDS=y
          CONFIG_ATH10K_THERMAL=y
          CONFIG_ATH9K_SUPPORT_PCOEM=y
          CONFIG_ATH_USER_REGD=y
          CONFIG_BROOK_COMPRESS_UPX=y
          CONFIG_DRIVER_11AC_SUPPORT=y
          CONFIG_DRIVER_11N_SUPPORT=y
          # CONFIG_FEED_helloworld is not set
          # CONFIG_FEED_kenzo is not set
          # CONFIG_FEED_luci is not set
          # CONFIG_FEED_packages is not set
          # CONFIG_FEED_routing is not set
          # CONFIG_FEED_small is not set
          # CONFIG_FEED_telephony is not set
          CONFIG_PACKAGE_ATH_DFS=y
          CONFIG_PACKAGE_MAC80211_DEBUGFS=y
          CONFIG_PACKAGE_MAC80211_MESH=y
          CONFIG_PACKAGE_ath10k-board-qca9888=y
          CONFIG_PACKAGE_ath10k-board-qca988x=y
          CONFIG_PACKAGE_ath10k-board-qca9984=y
          CONFIG_PACKAGE_ath10k-firmware-qca9888=y
          CONFIG_PACKAGE_ath10k-firmware-qca988x=y
          CONFIG_PACKAGE_ath10k-firmware-qca9984=y
          CONFIG_PACKAGE_ath9k-htc-firmware=y
          # CONFIG_PACKAGE_automount is not set
          # CONFIG_PACKAGE_autosamba is not set
          CONFIG_PACKAGE_bash=y
          CONFIG_PACKAGE_boost=y
          CONFIG_PACKAGE_boost-date_time=y
          CONFIG_PACKAGE_boost-program_options=y
          CONFIG_PACKAGE_boost-system=y
          CONFIG_PACKAGE_brcmfmac-firmware-43602a1-pcie=y
          CONFIG_PACKAGE_chinadns-ng=y
          CONFIG_PACKAGE_coreutils-nohup=y
          CONFIG_PACKAGE_haproxy=y
          CONFIG_PACKAGE_hostapd-common=y
          CONFIG_PACKAGE_iptables-mod-iprange=y
          CONFIG_PACKAGE_iw=y
          CONFIG_PACKAGE_iwinfo=y
          CONFIG_PACKAGE_kcptun-client=y
          CONFIG_PACKAGE_kcptun-config=y
          CONFIG_PACKAGE_kmod-ath=y
          CONFIG_PACKAGE_kmod-ath10k=y
          CONFIG_PACKAGE_kmod-ath5k=y
          CONFIG_PACKAGE_kmod-ath9k=y
          CONFIG_PACKAGE_kmod-ath9k-common=y
          CONFIG_PACKAGE_kmod-ath9k-htc=y
          CONFIG_PACKAGE_kmod-cfg80211=y
          CONFIG_PACKAGE_kmod-crypto-ccm=y
          CONFIG_PACKAGE_kmod-crypto-cmac=y
          CONFIG_PACKAGE_kmod-crypto-ctr=y
          CONFIG_PACKAGE_kmod-crypto-gcm=y
          CONFIG_PACKAGE_kmod-crypto-gf128=y
          CONFIG_PACKAGE_kmod-crypto-ghash=y
          CONFIG_PACKAGE_kmod-crypto-hmac=y
          # CONFIG_PACKAGE_kmod-crypto-kpp is not set
          CONFIG_PACKAGE_kmod-crypto-rng=y
          CONFIG_PACKAGE_kmod-crypto-seqiv=y
          CONFIG_PACKAGE_kmod-crypto-sha256=y
          # CONFIG_PACKAGE_kmod-fs-ntfs3 is not set
          CONFIG_PACKAGE_kmod-ipt-iprange=y
          CONFIG_PACKAGE_kmod-ixgbevf=y
          CONFIG_PACKAGE_kmod-lib-crc-itu-t=y
          CONFIG_PACKAGE_kmod-lib-crc7=y
          CONFIG_PACKAGE_kmod-mac80211=y
          CONFIG_PACKAGE_kmod-mmc-spi=y
          CONFIG_PACKAGE_kmod-rt2800-lib=y
          CONFIG_PACKAGE_kmod-rt2800-usb=y
          CONFIG_PACKAGE_kmod-rt2x00-lib=y
          CONFIG_PACKAGE_kmod-rt2x00-usb=y
          CONFIG_PACKAGE_kmod-thermal=y
          CONFIG_PACKAGE_kmod-usb-net-asix=y
          CONFIG_PACKAGE_libatomic=y
          CONFIG_PACKAGE_libltdl=y
          CONFIG_PACKAGE_liblua5.3=y
          CONFIG_PACKAGE_libmaxminddb=y
          CONFIG_PACKAGE_libstdcpp=y
          CONFIG_PACKAGE_lua-cjson=y
          CONFIG_PACKAGE_lua-maxminddb=y
          CONFIG_PACKAGE_luasocket=y
          CONFIG_PACKAGE_luci-app-bypass=y
          CONFIG_PACKAGE_luci-app-bypass_INCLUDE_Kcptun=y
          # CONFIG_PACKAGE_luci-app-bypass_INCLUDE_ShadowsocksR_Libev_Client is not set
          # CONFIG_PACKAGE_luci-app-bypass_INCLUDE_ShadowsocksR_Libev_Server is not set
          # CONFIG_PACKAGE_luci-app-bypass_INCLUDE_Shadowsocks_Libev_Server is not set
          # CONFIG_PACKAGE_luci-app-bypass_INCLUDE_Simple_obfs is not set
          # CONFIG_PACKAGE_luci-app-bypass_INCLUDE_Socks5_Proxy is not set
          # CONFIG_PACKAGE_luci-app-bypass_INCLUDE_Socks_Server is not set
          CONFIG_PACKAGE_luci-app-bypass_INCLUDE_V2ray_plugin=y
          # CONFIG_PACKAGE_luci-app-ddns is not set
          CONFIG_PACKAGE_luci-app-passwall=y
          # CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Haproxy is not set
          # CONFIG_PACKAGE_luci-app-passwall_INCLUDE_PDNSD is not set
          # CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks_Libev_Server is not set
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Trojan_GO=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Xray_Plugin=y
          # CONFIG_PACKAGE_luci-app-samba is not set
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_IPT2Socks=y
          # CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Libev_Client is not set
          # CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Libev_Server is not set
          # CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks_Libev_Client is not set
          # CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks_Libev_Server is not set
          # CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Simple_Obfs is not set
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Trojan=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray_Plugin=y
          CONFIG_PACKAGE_luci-app-vssr=y
          CONFIG_PACKAGE_luci-app-vssr_INCLUDE_Kcptun=y
          # CONFIG_PACKAGE_luci-app-vssr_INCLUDE_ShadowsocksR_Libev_Server is not set
          CONFIG_PACKAGE_luci-compat=y
          CONFIG_PACKAGE_luci-i18n-bypass-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-passwall-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-vssr-zh-cn=y
          # CONFIG_PACKAGE_ntfs3-mount is not set
          CONFIG_PACKAGE_rt2800-usb-firmware=y
          CONFIG_PACKAGE_shadowsocks-rust-sslocal=y
          CONFIG_PACKAGE_smartdns=y
          CONFIG_PACKAGE_trojan=y
          CONFIG_PACKAGE_trojan-go=y
          CONFIG_PACKAGE_trojan-plus=y
          CONFIG_PACKAGE_unzip=y
          CONFIG_PACKAGE_v2ray-core=y
          CONFIG_PACKAGE_v2ray-extra=y
          CONFIG_PACKAGE_v2ray-plugin=y
          CONFIG_PACKAGE_wireless-regdb=y
          CONFIG_PACKAGE_wpad=y
          CONFIG_PACKAGE_xray-plugin=y
          CONFIG_TROJAN_GO_COMPRESS_UPX=y
          CONFIG_WPA_MSG_MIN_PRIORITY=3
          CONFIG_boost-compile-visibility-hidden=y
          CONFIG_boost-runtime-shared=y
          CONFIG_boost-static-and-shared-libs=y
          CONFIG_boost-variant-release=y
          CONFIG_PACKAGE_SAMBA_MAX_DEBUG_LEVEL=-1
          CONFIG_PACKAGE_kmod-fs-exfat=y
          CONFIG_PACKAGE_kmod-fs-ext4=y
          CONFIG_PACKAGE_kmod-lib-crc16=y
          CONFIG_PACKAGE_kmod-scsi-core=y
          CONFIG_PACKAGE_kmod-usb-storage=y
          CONFIG_PACKAGE_kmod-usb-storage-extras=y
          CONFIG_PACKAGE_kmod-usb-storage-uas=y
          CONFIG_PACKAGE_libcares=y
          CONFIG_PACKAGE_samba36-server=y
          CONFIG_PACKAGE_shadowsocks-libev-ss-server=y
          CONFIG_PACKAGE_shadowsocksr-libev-ssr-server=y
          CONFIG_PACKAGE_wsdd2=y
          #
          # ========================固件定制部分结束========================
          #
          EOF
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig

      - name: Make download
        run: |
          make download -j8
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Deliver buildinfo
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/
  

      - name: Upload release asset
        if: github.event == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.YOURTOKEN }}
          file: ./artifact/firmware/*
          tag: ${{ github.ref }}
          file_glob: true
